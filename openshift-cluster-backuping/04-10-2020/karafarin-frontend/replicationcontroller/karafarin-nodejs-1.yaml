apiVersion: v1
kind: ReplicationController
metadata:
  annotations:
    kubectl.kubernetes.io/original-replicas: "2"
    openshift.io/deployer-pod.completed-at: 2020-09-13 07:53:55 +0000 UTC
    openshift.io/deployer-pod.created-at: 2020-09-13 07:53:44 +0000 UTC
    openshift.io/deployer-pod.name: karafarin-nodejs-1-deploy
    openshift.io/deployment-config.latest-version: "1"
    openshift.io/deployment-config.name: karafarin-nodejs
    openshift.io/deployment.phase: Complete
    openshift.io/deployment.replicas: "1"
    openshift.io/deployment.status-reason: config change
    openshift.io/encoded-deployment-config: |
      {"kind":"DeploymentConfig","apiVersion":"apps.openshift.io/v1","metadata":{"name":"karafarin-nodejs","namespace":"karafarin-frontend","selfLink":"/apis/apps.openshift.io/v1/namespaces/karafarin-frontend/deploymentconfigs/karafarin-nodejs","uid":"50922087-f590-11ea-b30d-000c297c3a2d","resourceVersion":"355402","generation":2,"creationTimestamp":"2020-09-13T07:11:16Z","labels":{"app":"karafarin-nodejs"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["karafarin-nodejs"],"from":{"kind":"ImageStreamTag","namespace":"karafarin-frontend","name":"karafarin-nodejs:latest"},"lastTriggeredImage":"172.30.1.1:5000/karafarin-frontend/karafarin-nodejs@sha256:41097aea3dca76f3eec1b222355ac1c1e1b6f5189e878124175fcdcbf758439c"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"karafarin-nodejs"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"karafarin-nodejs","deploymentconfig":"karafarin-nodejs"}},"spec":{"containers":[{"name":"karafarin-nodejs","image":"172.30.1.1:5000/karafarin-frontend/karafarin-nodejs@sha256:41097aea3dca76f3eec1b222355ac1c1e1b6f5189e878124175fcdcbf758439c","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2020-09-13T07:11:16Z","lastTransitionTime":"2020-09-13T07:11:16Z","message":"Deployment config does not have minimum availability."}]}}
  creationTimestamp: 2020-09-13T07:53:44Z
  generation: 5
  labels:
    app: karafarin-nodejs
    openshift.io/deployment-config.name: karafarin-nodejs
  name: karafarin-nodejs-1
  namespace: karafarin-frontend
  ownerReferences:
  - apiVersion: apps.openshift.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: DeploymentConfig
    name: karafarin-nodejs
    uid: 50922087-f590-11ea-b30d-000c297c3a2d
  resourceVersion: "1039463"
  selfLink: /api/v1/namespaces/karafarin-frontend/replicationcontrollers/karafarin-nodejs-1
  uid: 3f4619fb-f596-11ea-97ad-000c297c3a2d
spec:
  replicas: 0
  selector:
    deployment: karafarin-nodejs-1
    deploymentconfig: karafarin-nodejs
  template:
    metadata:
      annotations:
        openshift.io/deployment-config.latest-version: "1"
        openshift.io/deployment-config.name: karafarin-nodejs
        openshift.io/deployment.name: karafarin-nodejs-1
      creationTimestamp: null
      labels:
        app: karafarin-nodejs
        deployment: karafarin-nodejs-1
        deploymentconfig: karafarin-nodejs
    spec:
      containers:
      - image: 172.30.1.1:5000/karafarin-frontend/karafarin-nodejs@sha256:41097aea3dca76f3eec1b222355ac1c1e1b6f5189e878124175fcdcbf758439c
        imagePullPolicy: Always
        name: karafarin-nodejs
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  observedGeneration: 5
  replicas: 0
